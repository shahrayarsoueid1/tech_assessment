import 'package:topup_app/app/features/beneficiaries/presentation/widgets/phone_number/country.dart';

/// Holds country related phone number data
final List<Country> countries = <Country>[
  Country('Afghanistan', 'AF', 93, LengthRule.exact(9)),
  Country('Albania', 'AL', 355, LengthRule.range(3, 9)),
  Country('Algeria', 'DZ', 213, LengthRule.oneOf(<int>[8, 9])),
  Country('American Samoa', 'AS', 1684, LengthRule.exact(7)),
  Country('Andorra', 'AD', 376, LengthRule.oneOf(<int>[6, 8, 9])),
  Country('Angola', 'AO', 244, LengthRule.exact(9)),
  Country('Anguilla', 'AI', 1264, LengthRule.exact(7)),
  Country('Antarctica', 'AQ', 672, LengthRule.exact(6)),
  Country('Antigua and Barbuda', 'AG', 1268, LengthRule.exact(7)),
  Country('Argentina', 'AR', 54, LengthRule.exact(10)),
  Country('Armenia', 'AM', 374, LengthRule.exact(8)),
  Country('Aruba', 'AW', 297, LengthRule.exact(7)),
  Country('Australia', 'AU', 61, LengthRule.range(4, 15)),
  Country('Austria', 'AT', 43, LengthRule.range(4, 13)),
  Country('Azerbaijan', 'AZ', 994, LengthRule.exact(9)),
  Country('Bahamas', 'BS', 1242, LengthRule.exact(7)),
  Country('Bahrain', 'BH', 973, LengthRule.exact(8)),
  Country('Bangladesh', 'BD', 880, LengthRule.range(6, 10)),
  Country('Barbados', 'BB', 1246, LengthRule.exact(7)),
  Country('Belarus', 'BY', 375, LengthRule.range(9, 10)),
  Country('Belgium', 'BE', 32, LengthRule.range(8, 9)),
  Country('Belize', 'BZ', 501, LengthRule.exact(7)),
  Country('Benin', 'BJ', 229, LengthRule.exact(8)),
  Country('Bermuda', 'BM', 1441, LengthRule.exact(7)),
  Country('Bhutan', 'BT', 975, LengthRule.range(7, 8)),
  Country('Bolivia', 'BO', 591, LengthRule.exact(8)),
  Country('Bosnia and Herzegovina', 'BA', 387, LengthRule.exact(8)),
  Country('Botswana', 'BW', 267, LengthRule.range(7, 8)),
  Country('Brazil', 'BR', 55, LengthRule.exact(10)),
  Country('British Indian Ocean Territory', 'IO', 246, LengthRule.exact(7)),
  Country('British Virgin Islands', 'VG', 1284, LengthRule.exact(7)),
  Country('Brunei', 'BN', 673, LengthRule.exact(7)),
  Country('Bulgaria', 'BG', 359, LengthRule.range(7, 9)),
  Country('Burkina Faso', 'BF', 226, LengthRule.exact(8)),
  Country('Burundi', 'BI', 257, LengthRule.exact(8)),
  Country('Cambodia', 'KH', 855, LengthRule.exact(8)),
  Country('Cameroon', 'CM', 237, LengthRule.exact(8)),
  Country('Canada', 'CA', 1, LengthRule.exact(10)),
  Country('Cape Verde', 'CV', 238, LengthRule.exact(7)),
  Country('Cayman Islands', 'KY', 1345, LengthRule.exact(7)),
  Country('Central African Republic', 'CF', 236, LengthRule.exact(8)),
  Country('Chad', 'TD', 235, LengthRule.oneOf(<int>[6, 7])),
  Country('Chile', 'CL', 56, LengthRule.range(8, 9)),
  Country('China', 'CN', 86, LengthRule.range(5, 12)),
  Country('Christmas Island', 'CX', 61, LengthRule.range(4, 15)),
  Country('Cocos Islands', 'CC', 61, LengthRule.range(4, 15)),
  Country('Colombia', 'CO', 57, LengthRule.oneOf(<int>[8, 10])),
  Country('Comoros', 'KM', 269, LengthRule.exact(7)),
  Country('Cook Islands', 'CK', 682, LengthRule.exact(5)),
  Country('Costa Rica', 'CR', 506, LengthRule.exact(8)),
  Country('Croatia', 'HR', 385, LengthRule.range(8, 12)),
  Country('Cuba', 'CU', 53, LengthRule.range(6, 8)),
  Country('Curacao', 'CW', 599, LengthRule.range(6, 8)),
  Country('Cyprus', 'CY', 357, LengthRule.oneOf(<int>[8, 11])),
  Country('Czech Republic', 'CZ', 420, LengthRule.range(4, 12)),
  Country(
    'Democratic Republic of the Congo',
    'CD',
    243,
    LengthRule.range(5, 9),
  ),
  Country('Denmark', 'DK', 45, LengthRule.exact(8)),
  Country('Djibouti', 'DJ', 253, LengthRule.exact(6)),
  Country('Dominica', 'DM', 1767, LengthRule.exact(7)),
  Country('Dominican Republic', 'DO', 18, LengthRule.exact(12)),
  Country('East Timor', 'TL', 670, LengthRule.exact(7)),
  Country('Ecuador', 'EC', 593, LengthRule.exact(8)),
  Country('Egypt', 'EG', 20, LengthRule.range(7, 9)),
  Country('El Salvador', 'SV', 503, LengthRule.oneOf(<int>[7, 8, 11])),
  Country('Equatorial Guinea', 'GQ', 240, LengthRule.exact(6)),
  Country('Eritrea', 'ER', 291, LengthRule.exact(7)),
  Country('Estonia', 'EE', 372, LengthRule.range(7, 10)),
  Country('Ethiopia', 'ET', 251, LengthRule.exact(9)),
  Country('Falkland Islands', 'FK', 500, LengthRule.exact(5)),
  Country('Faroe Islands', 'FO', 298, LengthRule.exact(6)),
  Country('Fiji', 'FJ', 679, LengthRule.exact(7)),
  Country('Finland', 'FI', 358, LengthRule.range(5, 12)),
  Country('France', 'FR', 33, LengthRule.exact(9)),
  Country('French Polynesia', 'PF', 689, LengthRule.exact(6)),
  Country('Gabon', 'GA', 241, LengthRule.oneOf(<int>[6, 7])),
  Country('Gambia', 'GM', 220, LengthRule.exact(7)),
  Country('Georgia', 'GE', 995, LengthRule.exact(8)),
  Country('Germany', 'DE', 49, LengthRule.range(6, 13)),
  Country('Ghana', 'GH', 233, LengthRule.range(5, 9)),
  Country('Gibraltar', 'GI', 350, LengthRule.exact(8)),
  Country('Greece', 'GR', 30, LengthRule.exact(10)),
  Country('Greenland', 'GL', 299, LengthRule.exact(6)),
  Country('Grenada', 'GD', 1473, LengthRule.exact(7)),
  Country('Guam', 'GU', 1671, LengthRule.exact(7)),
  Country('Guatemala', 'GT', 502, LengthRule.exact(8)),
  Country('Guernsey', 'GG', 441481, LengthRule.exact(6)),
  Country('Guinea', 'GN', 224, LengthRule.exact(8)),
  Country('Guinea-Bissau', 'GW', 245, LengthRule.exact(7)),
  Country('Guyana', 'GY', 592, LengthRule.exact(7)),
  Country('Haiti', 'HT', 509, LengthRule.exact(8)),
  Country('Honduras', 'HN', 504, LengthRule.oneOf(<int>[7, 8])),
  Country('Hong Kong', 'HK', 852, LengthRule.range(4, 9)),
  Country('Hungary', 'HU', 36, LengthRule.range(8, 9)),
  Country('Iceland', 'IS', 354, LengthRule.oneOf(<int>[7, 9])),
  Country('India', 'IN', 91, LengthRule.range(7, 10)),
  Country('Indonesia', 'ID', 62, LengthRule.range(5, 10)),
  Country('Iran', 'IR', 98, LengthRule.range(6, 10)),
  Country('Iraq', 'IQ', 964, LengthRule.range(8, 10)),
  Country('Ireland', 'IE', 353, LengthRule.range(7, 11)),
  Country('Isle of Man', 'IM', 441624, LengthRule.exact(6)),
  Country('Israel', 'IL', 972, LengthRule.range(8, 9)),
  Country('Italy', 'IT', 39, LengthRule.range(9, 13)),
  Country('Ivory Coast', 'CI', 225, LengthRule.exact(8)),
  Country('Jamaica', 'JM', 1876, LengthRule.exact(7)),
  Country('Japan', 'JP', 81, LengthRule.range(9, 10)),
  Country('Jersey', 'JE', 441534, LengthRule.exact(6)),
  Country('Jordan', 'JO', 962, LengthRule.range(5, 9)),
  Country('Kazakhstan', 'KZ', 7, LengthRule.exact(10)),
  Country('Kenya', 'KE', 254, LengthRule.range(6, 10)),
  Country('Kiribati', 'KI', 686, LengthRule.exact(5)),
  Country('Kosovo', 'XK', 383, LengthRule.exact(8)),
  Country('Kuwait', 'KW', 965, LengthRule.oneOf(<int>[7, 8])),
  Country('Kyrgyzstan', 'KG', 996, LengthRule.exact(9)),
  Country('Laos', 'LA', 856, LengthRule.range(8, 9)),
  Country('Latvia', 'LV', 371, LengthRule.oneOf(<int>[7, 8])),
  Country('Lebanon', 'LB', 961, LengthRule.range(7, 8)),
  Country('Lesotho', 'LS', 266, LengthRule.exact(8)),
  Country('Liberia', 'LR', 231, LengthRule.range(7, 8)),
  Country('Libya', 'LY', 218, LengthRule.range(8, 9)),
  Country('Liechtenstein', 'LI', 423, LengthRule.range(7, 9)),
  Country('Lithuania', 'LT', 370, LengthRule.exact(8)),
  Country('Luxembourg', 'LU', 352, LengthRule.range(4, 11)),
  Country('Macau', 'MO', 853, LengthRule.range(7, 8)),
  Country('Macedonia', 'MK', 389, LengthRule.exact(8)),
  Country('Madagascar', 'MG', 261, LengthRule.range(9, 10)),
  Country('Malawi', 'MW', 265, LengthRule.oneOf(<int>[7, 8])),
  Country('Malaysia', 'MY', 60, LengthRule.range(7, 9)),
  Country('Maldives', 'MV', 960, LengthRule.exact(7)),
  Country('Mali', 'ML', 223, LengthRule.exact(8)),
  Country('Malta', 'MT', 356, LengthRule.exact(8)),
  Country('Marshall Islands', 'MH', 692, LengthRule.exact(7)),
  Country('Mauritania', 'MR', 222, LengthRule.exact(7)),
  Country('Mauritius', 'MU', 230, LengthRule.exact(7)),
  Country('Mayotte', 'YT', 262, LengthRule.exact(9)),
  Country('Mexico', 'MX', 52, LengthRule.exact(10)),
  Country('Micronesia', 'FM', 691, LengthRule.exact(7)),
  Country('Moldova', 'MD', 373, LengthRule.exact(8)),
  Country('Monaco', 'MC', 377, LengthRule.range(5, 9)),
  Country('Mongolia', 'MN', 976, LengthRule.range(7, 8)),
  Country('Montenegro', 'ME', 382, LengthRule.range(4, 12)),
  Country('Montserrat', 'MS', 1664, LengthRule.exact(7)),
  Country('Morocco', 'MA', 212, LengthRule.exact(9)),
  Country('Mozambique', 'MZ', 258, LengthRule.range(8, 9)),
  Country('Myanmar', 'MM', 95, LengthRule.range(7, 9)),
  Country('Namibia', 'NA', 264, LengthRule.range(6, 10)),
  Country('Nauru', 'NR', 674, LengthRule.oneOf(<int>[4, 7])),
  Country('Nepal', 'NP', 977, LengthRule.range(8, 9)),
  Country('Netherlands', 'NL', 31, LengthRule.exact(9)),
  Country('Netherlands Antilles', 'AN', 599, LengthRule.range(6, 8)),
  Country('New Caledonia', 'NC', 687, LengthRule.exact(6)),
  Country('New Zealand', 'NZ', 64, LengthRule.range(3, 10)),
  Country('Nicaragua', 'NI', 505, LengthRule.exact(8)),
  Country('Niger', 'NE', 227, LengthRule.exact(8)),
  Country('Nigeria', 'NG', 234, LengthRule.range(7, 10)),
  Country('Niue', 'NU', 683, LengthRule.exact(4)),
  Country('North Korea', 'KP', 850, LengthRule.range(3, 10)),
  Country('Northern Mariana Islands', 'MP', 1670, LengthRule.exact(7)),
  Country('Norway', 'NO', 47, LengthRule.oneOf(<int>[5, 8])),
  Country('Oman', 'OM', 968, LengthRule.range(7, 8)),
  Country('Pakistan', 'PK', 92, LengthRule.range(8, 11)),
  Country('Palau', 'PW', 680, LengthRule.exact(7)),
  Country('Palestine', 'PS', 970, LengthRule.exact(9)),
  Country('Panama', 'PA', 507, LengthRule.oneOf(<int>[7, 8])),
  Country('Papua New Guinea', 'PG', 675, LengthRule.range(4, 11)),
  Country('Paraguay', 'PY', 595, LengthRule.range(5, 9)),
  Country('Peru', 'PE', 51, LengthRule.range(8, 11)),
  Country('Philippines', 'PH', 63, LengthRule.range(8, 10)),
  Country('Pitcairn', 'PN', 64, LengthRule.range(3, 10)),
  Country('Poland', 'PL', 48, LengthRule.range(6, 9)),
  Country('Portugal', 'PT', 351, LengthRule.oneOf(<int>[9, 11])),
  Country('Qatar', 'QA', 974, LengthRule.oneOf(<int>[6, 7, 10])),
  Country('Republic of the Congo', 'CG', 242, LengthRule.range(6, 7)),
  Country('Reunion', 'RE', 262, LengthRule.exact(9)),
  Country('Romania', 'RO', 40, LengthRule.exact(9)),
  Country('Russia', 'RU', 7, LengthRule.exact(10)),
  Country('Rwanda', 'RW', 250, LengthRule.exact(9)),
  Country('Saint Barthelemy', 'BL', 590, LengthRule.exact(9)),
  Country('Saint Helena', 'SH', 290, LengthRule.exact(4)),
  Country('Saint Kitts and Nevis', 'KN', 1869, LengthRule.exact(7)),
  Country('Saint Lucia', 'LC', 1758, LengthRule.exact(7)),
  Country('Saint Martin', 'MF', 590, LengthRule.exact(9)),
  Country('Saint Pierre and Miquelon', 'PM', 508, LengthRule.exact(6)),
  Country('Saint Vincent and the Grenadines', 'VC', 1784, LengthRule.exact(7)),
  Country('Samoa', 'WS', 685, LengthRule.range(3, 7)),
  Country('San Marino', 'SM', 378, LengthRule.range(6, 10)),
  Country('Sao Tome and Principe', 'ST', 239, LengthRule.exact(7)),
  Country('Saudi Arabia', 'SA', 966, LengthRule.range(8, 9)),
  Country('Senegal', 'SN', 221, LengthRule.exact(9)),
  Country('Serbia', 'RS', 381, LengthRule.range(4, 12)),
  Country('Seychelles', 'SC', 248, LengthRule.exact(6)),
  Country('Sierra Leone', 'SL', 232, LengthRule.exact(8)),
  Country('Singapore', 'SG', 65, LengthRule.range(8, 12)),
  Country('Sint Maarten', 'SX', 1721, LengthRule.exact(7)),
  Country('Slovakia', 'SK', 421, LengthRule.range(4, 9)),
  Country('Slovenia', 'SI', 386, LengthRule.exact(8)),
  Country('Solomon Islands', 'SB', 677, LengthRule.exact(5)),
  Country('Somalia', 'SO', 252, LengthRule.range(5, 8)),
  Country('South Africa', 'ZA', 27, LengthRule.exact(9)),
  Country('South Korea', 'KR', 82, LengthRule.range(8, 11)),
  Country('South Sudan', 'SS', 211, LengthRule.exact(9)),
  Country('Spain', 'ES', 34, LengthRule.exact(9)),
  Country('Sri Lanka', 'LK', 94, LengthRule.exact(9)),
  Country('Sudan', 'SD', 249, LengthRule.exact(9)),
  Country('Suriname', 'SR', 597, LengthRule.range(6, 7)),
  Country('Svalbard and Jan Mayen', 'SJ', 47, LengthRule.oneOf(<int>[5, 8])),
  Country('Swaziland', 'SZ', 268, LengthRule.range(7, 8)),
  Country('Sweden', 'SE', 46, LengthRule.range(7, 13)),
  Country('Switzerland', 'CH', 41, LengthRule.range(4, 12)),
  Country('Syria', 'SY', 963, LengthRule.range(8, 10)),
  Country('Taiwan', 'TW', 886, LengthRule.range(8, 9)),
  Country('Tajikistan', 'TJ', 992, LengthRule.exact(9)),
  Country('Tanzania', 'TZ', 255, LengthRule.exact(9)),
  Country('Thailand', 'TH', 66, LengthRule.oneOf(<int>[8, 9])),
  Country('Togo', 'TG', 228, LengthRule.exact(7)),
  Country('Tokelau', 'TK', 690, LengthRule.exact(4)),
  Country('Tonga', 'TO', 676, LengthRule.oneOf(<int>[5, 7])),
  Country('Trinidad and Tobago', 'TT', 1868, LengthRule.exact(7)),
  Country('Tunisia', 'TN', 216, LengthRule.exact(8)),
  Country('Turkey', 'TR', 90, LengthRule.exact(10)),
  Country('Turkmenistan', 'TM', 993, LengthRule.exact(8)),
  Country('Turks and Caicos Islands', 'TC', 1649, LengthRule.exact(7)),
  Country('Tuvalu', 'TV', 688, LengthRule.oneOf(<int>[5, 6])),
  Country('U.S. Virgin Islands', 'VI', 1340, LengthRule.exact(7)),
  Country('Uganda', 'UG', 256, LengthRule.exact(9)),
  Country('Ukraine', 'UA', 380, LengthRule.exact(9)),
  Country('United Arab Emirates', 'AE', 971, LengthRule.range(8, 9)),
  Country('United Kingdom', 'GB', 44, LengthRule.range(7, 10)),
  Country('United States', 'US', 1, LengthRule.exact(10)),
  Country('Uruguay', 'UY', 598, LengthRule.range(4, 11)),
  Country('Uzbekistan', 'UZ', 998, LengthRule.exact(9)),
  Country('Vanuatu', 'VU', 678, LengthRule.oneOf(<int>[5, 7])),
  Country('Vatican', 'VA', 39, LengthRule.exact(10)),
  Country('Venezuela', 'VE', 58, LengthRule.exact(10)),
  Country('Vietnam', 'VN', 84, LengthRule.range(7, 10)),
  Country('Wallis and Futuna', 'WF', 681, LengthRule.exact(6)),
  Country('Western Sahara', 'EH', 212, LengthRule.exact(9)),
  Country('Yemen', 'YE', 967, LengthRule.range(6, 9)),
  Country('Zambia', 'ZM', 260, LengthRule.exact(9)),
  Country('Zimbabwe', 'ZW', 263, LengthRule.range(5, 9)),
];
